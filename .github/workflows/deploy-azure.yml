name: Deploy to Azure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: environment
      enable_deploy:
        description: 'Enable deployment to Azure Web App'
        required: false
        default: true
        type: boolean

permissions:
  id-token: write
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  EXTERNAL_REPO_OWNER: ${{ vars.EXTERNAL_REPO_OWNER || '' }}
  EXTERNAL_REPO_NAME: ${{ vars.EXTERNAL_REPO_NAME || '' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Step 1 - Fetch external repository
        if: ${{ env.EXTERNAL_REPO_OWNER != '' && env.EXTERNAL_REPO_NAME != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.EXTERNAL_REPO_OWNER }}/${{ env.EXTERNAL_REPO_NAME }}
          token: ${{ secrets.GHCR_TOKEN }}
          path: external-repo

      - name: Step 2 - Clear existing markdown files
        run: |
          echo "üóëÔ∏è Removing existing markdown files..."
          rm -f ./application/frontend/markdown/*.md
          echo "‚úÖ Existing markdown files removed"

      - name: Step 3 - Copy posts directory
        if: ${{ env.EXTERNAL_REPO_OWNER != '' && env.EXTERNAL_REPO_NAME != '' }}
        run: |
          echo "üìÅ Copying posts directory from external repository..."
          
          if [ -d "./external-repo/posts" ]; then
            cp -r ./external-repo/posts/* ./application/frontend/markdown/
            echo "‚úÖ Posts directory copied successfully"
            
            echo "üìÇ Final markdown directory contents:"
            ls -la ./application/frontend/markdown/
          else
            echo "‚ö†Ô∏è Posts directory not found in external repository"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.environment }}-${{ github.run_number }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./application/frontend
          file: ./application/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.enable_deploy == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Restart Azure Web App
        run: |
          az webapp restart \
            --name ${{ vars.APP_NAME }}-webapp \
            --resource-group ${{ vars.RESOURCE_GROUP }}

      - name: Azure logout
        run: |
          az logout
